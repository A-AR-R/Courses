<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">

<HTML LANG="en">
<HEAD>
<TITLE>CSC 324 Winter 2006</TITLE>
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
<meta HTTP-EQUIV="Pragma" CONTENT="no-cache">
</HEAD>

<BODY bgcolor="#FBFBF0" LINK="#0000AA" VLINK="#602000">

<H1><a href="..">CSC 324</a>: Exams</H1>

<h3>Test Schedule</h3>
<table border=1 cellpadding="3">
<tr> <th>Test</th> <th> Weight</th> <th>Date</th>
</tr>

<tr>
  <td><a href="#midterm">Midterm Test</a></td>
  <td align="right">15%</td>
  <td>Monday, February 27</td>
</tr>
<tr>
  <td><a href="#final">Final Exam</a></td>
  <td align="right">45%</td>
  <td>Exam period (April 17-29)</td>
</tr>
</table>

<h2><a name="finalsol">Final Exam Answers</a></h2>

<p>
Sample solutions to the final exam (partial):
<a href="finalsol.pdf">PDF</a> and
<a href="finalsol.ps">PS</a>
</p>

<h2><a name="final">Final Examination Details</a></h2>

<p>
The final exam will be written at the time set by the
<a href="http://www.utm.utoronto.ca/~w3reg/timetable/cal_pub.php">Final Exam Timetable</a>.
Make sure you note the date, time and room carefully.
</p>

<p>
The exam is <i>closed-book</i>: no aids are allowed.
The exam is set for <i>three hours</i> in length.
The questions will not rely on syntax or intimate knowledge of the
programming languages we've studied, rather your ability to use what
you've learned in the course. The focus will be on the intention of
your code and knowing what you can and how you can do it. If you
forget the exact name or syntax of a standard or basic programming element,
make your intention clear to obtain most or all applicable marks.
</p>

<p>
The exam will potentially cover anything we've covered in the course.
Clearly things we've concentrated on in lecture, tutorial and/or assignments
may be tested more thoroughly than topics we've encountered in passing.
Programming questions will require basic and important procedures that
we've concentrated on in class and on assignments; if they require
a specialized procedure, it will be explained sufficiently.
The following are some topics that may appear on the exam
(don't be startled by the length of this list--most of it is probably
second-nature by this point. This list may not be complete, please ask
if something seems to be unaccounted for):
</p>
<ul>
  <li>Functional programming
  <li>Scheme programming - short programs/procedures using basic constructs
  <li>Procedures (lambda) and variables (let, define)
  <li>List processing (car/cdr/cons)
  <li>Higher order functions (map, apply, for-each)
  <li>Recursion
  <li>Iteration
  <li>Mutation (set!)
  <li>Syntax extension (macros, define-syntax)
  <li>Continuations (call/cc)

  <li>Logical programming
  <li>Unification
  <li>Prolog programming - short predicate definitions
  <li>Horn clauses
  <li>Rule/fact ordering
  <li>Prolog variables and instantiation
  <li>Accumulators (like reverse/3)
  <li>Prolog search trees
  <li>Prolog lists and structures
  <li>Dynamic facts and rule
  <li>Cut (!)

  <li>Formal grammars (context-free languages/CFGs), BNF, language specification
  <li>Ambiguity in grammars

  <li>Elements of Objects/Object Oriented Programming
  <li>Polymorphism
  <li>Elements of imperative programming
  <li>Generics (templates)
  <li>Pattern matching
  <li>Types / the idea of type inference
  <li>Parameter passing modes
  <li>Scoping
  <li>Static and dynamic properties of programs

</ul>

<p>
There will <i>not</i> be any ML or C++ programming on the exam.
I expect you to know the contribution of these languages to the course.
</p>

<p>
There will be around 8-12 questions. The weight will be shifted slightly
to the material since the midterm, but there will be some Scheme questions.
Some questions will ask for short programs/procedures/predicates to be written,
some will require tracing (and understanding) program behaviour,
and others will be concerned with design of programming languages.
The questions will be grouped by common topics (i.e., Prolog questions will
more-or-less be together), but not sorted in any
order of presumed difficulty.
</p>

<p>
There should be enough space on the exam to fit your answers. If you find
you require additional space, there will be extra space on some exam pages.
If you find you require lots of additional space, you're probably doing
something wrong.
</p>

<p>
For programming or problem solving, any correct answer will obtain the
majority of the marks.
Additional marks will be awarded for especially elegant or concise answers,
or answers that demonstrate mastery of the programming paradigms.
</p>

<hr>

<h2><a name="midtermsol">Midterm Answers</a></h2>

<p>
Sample solutions to the midterm:
<a href="mtsol.pdf">PDF</a> and
<a href="mtsol.ps">PS</a>
</p>

<h2><a name="midterm">Midterm Details</a></h2>

<p>
The midterm test will be held at 9:10-10:00 on Monday, February 27.
The test is <i>closed-book</i> and lasts <i>50 minutes</i>.
The test will be written in the usual lecture room.
</p>

<p>
The midterm will potentially cover anything up to (but not including)
continuations in Scheme (obviously we can't test everything).
This includes material covered in lecture, tutorial and the assignment.
Particularly, properties of languages, evaluation of languages,
concepts of programming languages (scoping, variable binding, etc.)
and functional languages (as demonstrated by Scheme).
Scheme coverage includes:
</p>
<ul>
  <li>Basic data types, lists, symbols, quoting
  <li>Procedures (lambda) and variables (define, let), closures
  <li>Higher-order functions (apply, map, for-each)
  <li>Mutation (set!)
  <li>Recursion
  <li>Iteration
  <li>Syntax extension (macros, define-syntax)
  <li>Basic pattern matching
</ul>

<p>
For code you are asked to write, the most important thing is the
intention of the code. Scheme uses <i>lots</i> of brackets, so if you
have one misplaced or missing (as long as the intention is absolutely clear),
it will not be penalized.
</p>

<h2><a name="general">General information</a></h2>

<p>
Check the <a href="#pastofferings">past course offerings</a>
section for links to previous offerings of this course,
where you can find term tests and assignments to practice on.
</p>

<p>
The midterm test will last <em>50 minutes</em>
and will be held during regularly scheduled lecture time.
</p>

<p>
If you have any serious conflict
with the time or date of the midterm test,
please inform your instructor <em>immediately</em>
to make alternative arrangements.
</p>

<p>
The midterm test will be <em>closed book</em>
(<em>i.e.</em>, NO aids allowed),
and should be written in <em>pen</em>
(remarking requests for tests written in pencil will not be accepted)
&mdash; the test paper will have lots of room for rough work.
</p>

<h3><a name="pastofferings">
Past Course Offerings</a></h3>

<p>Some previous offerings of this course:
<a href="http://www.cs.toronto.edu/~sheila/324/f05/">Fall 2005</a>,
<a href="http://www.cs.toronto.edu/%7Eiq/csc324h/index.html">Summer 2005</a>,
<a href="http://www.cs.toronto.edu/%7Eiq/csc324s/index.html">Winter 2005</a>,
<a href="http://www.cs.toronto.edu/~wael/teaching/324-04f/index.html">Fall 2004</a>
<br>
<i>Note:</i>
The coverage of this incarnation of the course is somewhat different from
other recent offerings, so past exams may bear little resemblance
to our course. We are emphasizing different topics, and covering some
topics in a different order.
</p>

<HR>

<TABLE width="100%">
<TR>
<TD>
<SMALL>
<!--Copyright &#169;
Richard Krueger
<BR>
All rights reserved.
<BR>-->
<SCRIPT TYPE="text/JavaScript">
<!--
if (Date.parse(document.lastModified) != 0)
        document.write('<BR>Last update: ' + document.lastModified);
//-->
</SCRIPT>
</SMALL>
</TD>
<TD align=right>
    <a href="http://validator.w3.org/check?uri=referer"><img border="0"
        src="http://www.w3.org/Icons/valid-html401"
        alt="Valid HTML 4.01 Transitional" height="31" width="88"></a>
</TD>
</TR>
</TABLE>

</BODY>
</HTML>
