# or with r func
confint(fit, 'LoanPaymentsOverdue', level=0.95)
# -4.1634543 -0.3335853, significant, since not encompass 0
# x = 4
yhat <- s$coefficients[1,1]
yhat
# 2
data <- read.table("indicators.txt", header=TRUE)
data
fit <- lm(PriceChange~LoanPaymentsOverdue, data)
s <- summary(fit)
s
# 95% CI
n <- length(data$LoanPaymentsOverdue)
b1 <- coef(summary(fit))["LoanPaymentsOverdue", "Estimate"]
seb1 <- coef(summary(fit))["LoanPaymentsOverdue", "Std. Error"]
a <- qt(.975, n-2)*seb1
CI <- c(b1-a, b1+a)
CI
# or with r func
confint(fit, 'LoanPaymentsOverdue', level=0.95)
# -4.1634543 -0.3335853, significant, since not encompass 0
# x = 4
yhat <- s$coefficients[1,1] + s$coefficients[2,1]*4
# 2
data <- read.table("indicators.txt", header=TRUE)
data
fit <- lm(PriceChange~LoanPaymentsOverdue, data)
s <- summary(fit)
s
# 95% CI
n <- length(data$LoanPaymentsOverdue)
b1 <- coef(summary(fit))["LoanPaymentsOverdue", "Estimate"]
seb1 <- coef(summary(fit))["LoanPaymentsOverdue", "Std. Error"]
a <- qt(.975, n-2)*seb1
CI <- c(b1-a, b1+a)
CI
# or with r func
confint(fit, 'LoanPaymentsOverdue', level=0.95)
# -4.1634543 -0.3335853, significant, since not encompass 0
# x = 4
yhat <- s$coefficients[1,1] + s$coefficients[2,1]*4
yhat
data <- read.table("invoices.txt", header=TRUE)
data
#fit <- lm(PriceChange~LoanPaymentsOverdue, data)
#s <- summary(fit)
#s
data <- read.table("invoices.txt", header=TRUE)
data
fit <- lm(Time~Invoices, data)
s <- summary(fit)
s
data <- read.table("invoices.txt", header=TRUE)
data
fit <- lm(Time~Invoices, data)
s <- summary(fit)
s
plot(fit)
data <- read.table("invoices.txt", header=TRUE)
data
fit <- lm(Time~Invoices, data)
s <- summary(fit)
s
plot(data)
data <- read.table("invoices.txt", header=TRUE)
data
fit <- lm(Time~Invoices, data)
s <- summary(fit)
s
plot(data$Invoices, data$Tiem)
data <- read.table("invoices.txt", header=TRUE)
data
fit <- lm(Time~Invoices, data)
s <- summary(fit)
s
plot(data$Invoices, data$Time)
data <- read.table("invoices.txt", header=TRUE)
data
fit <- lm(Time~Invoices, data)
s <- summary(fit)
s
plot(data$Invoices, data$Time)
data <- read.table("invoices.txt", header=TRUE)
data
plot(data$Invoices, data$Time)
fit <- lm(Time~Invoices, data)
s <- summary(fit)
s
data <- read.table("invoices.txt", header=TRUE)
data
plot(data$Invoices, data$Time)
fit <- lm(Time~Invoices, data)
s <- summary(fit)
s
data <- read.table("invoices.txt", header=TRUE)
data
plot(data$Invoices, data$Time)
fit <- lm(Time~Invoices, data)
s <- summary(fit)
s
# 95% CI for beta_0
n <- length(data$Time)
b0 <- s$coefficients[0,0]
b0
#beta0CI <- c(-1,1)*qt(0.975, n-2)*s$coefficients[]
data <- read.table("invoices.txt", header=TRUE)
data
plot(data$Invoices, data$Time)
fit <- lm(Time~Invoices, data)
s <- summary(fit)
s
# 95% CI for beta_0
n <- length(data$Time)
b0 <- s$coefficients[1,1]
b0
#beta0CI <- c(-1,1)*qt(0.975, n-2)*s$coefficients[]
data <- read.table("invoices.txt", header=TRUE)
data
plot(data$Invoices, data$Time)
fit <- lm(Time~Invoices, data)
s <- summary(fit)
s
# 95% CI for beta_0
n <- length(data$Time)
b0 <- s$coefficients[1,1]
seb0 <- s$coefficients[1,2]
seb0
#beta0CI <- c(-1,1)*qt(0.975, n-2)*s$coefficients[]
data <- read.table("invoices.txt", header=TRUE)
data
fit <- lm(Time~Invoices, data)
s <- summary(fit)
s
# 95% CI for beta_0
n <- length(data$Time)
b0 <- s$coefficients[1,1]
seb0 <- s$coefficients[1,2]
seb0
#beta0CI <- c(-1,1)*qt(0.975, n-2)*s$coefficients[]
data <- read.table("invoices.txt", header=TRUE)
data
fit <- lm(Time~Invoices, data)
s <- summary(fit)
s
# 95% CI for beta_0
n <- length(data$Time)
b0 <- s$coefficients[1,1]
seb0 <- s$coefficients[1,2]
beta0CI <- b0 + c(-1,1)*qt(0.975, n-2)*seb0
data <- read.table("invoices.txt", header=TRUE)
data
fit <- lm(Time~Invoices, data)
s <- summary(fit)
s
# 95% CI for beta_0
n <- length(data$Time)
b0 <- s$coefficients[1,1]
seb0 <- s$coefficients[1,2]
beta0CI <- b0 + c(-1,1)*qt(0.975, n-2)*seb0
beta0CI
data <- read.table("invoices.txt", header=TRUE)
data
fit <- lm(Time~Invoices, data)
s <- summary(fit)
s
# 95% CI for beta_0
n <- length(data$Time)
b0 <- s$coefficients[1,1]
seb0 <- s$coefficients[1,2]
beta0CI <- b0 + c(-1,1)*qt(0.975, n-2)*seb0
beta0CI
# [1] 0.3912496 0.8921701
# test against H0: beta_1 = 0.01
b1 <- s$coefficients[2,1]
seb1 <- s$coefficients[2,2]
t <- (b1 - 0.01)/seb1
t
data <- read.table("invoices.txt", header=TRUE)
data
fit <- lm(Time~Invoices, data)
s <- summary(fit)
s
# 95% CI for beta_0
n <- length(data$Time)
b0 <- s$coefficients[1,1]
seb0 <- s$coefficients[1,2]
beta0CI <- b0 + c(-1,1)*qt(0.975, n-2)*seb0
beta0CI
# [1] 0.3912496 0.8921701
# test against H0: beta_1 = 0.01
b1 <- s$coefficients[2,1]
seb1 <- s$coefficients[2,2]
t <- (b1 - 0.01)/seb1
t
# [1] 1.578251
pval <- 2*pt(-abs(t),df=n-2)
data <- read.table("invoices.txt", header=TRUE)
data
fit <- lm(Time~Invoices, data)
s <- summary(fit)
s
# 95% CI for beta_0
n <- length(data$Time)
b0 <- s$coefficients[1,1]
seb0 <- s$coefficients[1,2]
beta0CI <- b0 + c(-1,1)*qt(0.975, n-2)*seb0
beta0CI
# [1] 0.3912496 0.8921701
# test against H0: beta_1 = 0.01
b1 <- s$coefficients[2,1]
seb1 <- s$coefficients[2,2]
t <- (b1 - 0.01)/seb1
t
# [1] 1.578251
pval <- 2*pt(-abs(t),df=n-2)
pval
data <- read.table("invoices.txt", header=TRUE)
data
fit <- lm(Time~Invoices, data)
s <- summary(fit)
s
# 95% CI for beta_0
n <- length(data$Time)
b0 <- s$coefficients[1,1]
seb0 <- s$coefficients[1,2]
beta0CI <- b0 + c(-1,1)*qt(0.975, n-2)*seb0
beta0CI
# [1] 0.3912496 0.8921701
# test against H0: beta_1 = 0.01
b1 <- s$coefficients[2,1]
seb1 <- s$coefficients[2,2]
t <- (b1 - 0.01)/seb1
t
# [1] 1.578251
pval <- 2*pt(-abs(t),df=n-2)
pval
# [1] 0.1257402
# not significant, no evidence that slope is different from 0.01
# find point estimate and 95% CI for x=130
yhat <- b0 + b1*130
yhat
data <- read.table("invoices.txt", header=TRUE)
data
fit <- lm(Time~Invoices, data)
s <- summary(fit)
s
# 95% CI for beta_0
n <- length(data$Time)
b0 <- s$coefficients[1,1]
seb0 <- s$coefficients[1,2]
beta0CI <- b0 + c(-1,1)*qt(0.975, n-2)*seb0
beta0CI
# [1] 0.3912496 0.8921701
# test against H0: beta_1 = 0.01
b1 <- s$coefficients[2,1]
seb1 <- s$coefficients[2,2]
t <- (b1 - 0.01)/seb1
t
# [1] 1.578251
pval <- 2*pt(-abs(t),df=n-2)
pval
# [1] 0.1257402
# not significant, no evidence that slope is different from 0.01
# find point estimate and 95% CI for x=130
yhat <- b0 + b1*130
yhatCI <- yhat + c(-1,1)*qt(0.975, n-2)*sqrt(1 + 1/n)
yhatCI
data <- read.table("invoices.txt", header=TRUE)
data
fit <- lm(Time~Invoices, data)
s <- summary(fit)
s
# 95% CI for beta_0
n <- length(data$Time)
b0 <- s$coefficients[1,1]
seb0 <- s$coefficients[1,2]
beta0CI <- b0 + c(-1,1)*qt(0.975, n-2)*seb0
beta0CI
# [1] 0.3912496 0.8921701
# test against H0: beta_1 = 0.01
b1 <- s$coefficients[2,1]
seb1 <- s$coefficients[2,2]
t <- (b1 - 0.01)/seb1
t
# [1] 1.578251
pval <- 2*pt(-abs(t),df=n-2)
pval
# [1] 0.1257402
# not significant, no evidence that slope is different from 0.01
# find point estimate and 95% CI for x=130
yhat <- b0 + b1*130
yhatCI <- yhat + c(-1,1)*qt(0.975, n-2)*sqrt(1 + 1/n)
yhatCI
n
data <- read.table("airfares.txt", header=TRUE)
data
data <- read.table("airfares.txt", header=TRUE)
fit <- lm(Fare~Distance, data)
data <- read.table("airfares.txt", header=TRUE)
fit <- lm(Fare~Distance, data)
s <- summary(fit)
s
data <- read.table("airfares.txt", header=TRUE)
fit <- lm(Fare~Distance, data)
s <- summary(fit)
s
plot(data$Distance, data$Fare)
data <- read.table("airfares.txt", header=TRUE)
plot(data$Distance, data$Fare)
fit <- lm(Fare~Distance, data)
s <- summary(fit)
s
data <- read.table("airfares.txt", header=TRUE)
plot(data$Distance, data$Fare)
fit <- lm(Fare~Distance, data)
s <- summary(fit)
print(fit)
data <- read.table("airfares.txt", header=TRUE)
fit <- lm(Fare~Distance, data)
s <- summary(fit)
plot(data$Distance, data$Fare)
plot(fit)
data <- read.table("airfares.txt", header=TRUE)
fit <- lm(Fare~Distance, data)
s <- summary(fit)
plot(data$Distance, data$Fare)
par(mfrow=4)
data <- read.table("airfares.txt", header=TRUE)
fit <- lm(Fare~Distance, data)
s <- summary(fit)
plot(data$Distance, data$Fare)
par(frow=4)
plot(fit)
data <- read.table("airfares.txt", header=TRUE)
fit <- lm(Fare~Distance, data)
s <- summary(fit)
plot(data$Distance, data$Fare)
plot(fit)
data <- read.table("airfares.txt", header=TRUE)
fit <- lm(Fare~Distance, data)
s <- summary(fit)
plot(data$Distance, data$Fare)
plot(fit)
s
X <- read.csv("profsalary.txt", sep="\t")
#mod1 <- lm(Salary ~ Experience)
View(X)
summary(mod1)
summary(mod)
summary(mod1)
X <- read.csv("profsalary.txt", sep="\t")
mod1 <- lm(Salary ~ Experience + I(Experience^2), data=X)
summary(mod1)
View(X)
X <- read.csv("profsalary.txt", sep="\t")
mod1 <- lm(Salary ~ Experience + I(Experience^2), data=X)
summary(mod1)
plot(mod1)
X <- read.csv("profsalary.txt", sep="\t")
mod1 <- lm(Salary ~ Experience + I(Experience^2), data=X)
summary(mod1)
# interpolate at 5 yrs of experience
e <- 5;
mod1$coefficients %*% c(1, e, e^2)
X <- read.csv("profsalary.txt", sep="\t")
mod1 <- lm(Salary ~ Experience + I(Experience^2), data=X)
summary(mod1)
# interpolate at 5 yrs of experience
e <- 5;
target_at_5 <- mod1$coefficients %*% c(1, e, e^2)
X <- read.csv("profsalary.txt", sep="\t")
mod1 <- lm(Salary ~ Experience + I(Experience^2), data=X)
summary(mod1)
# interpolate at 5 yrs of experience
e <- 5;
target_at_5 <- mod1$coefficients %*% c(1, e, e^2)
target_at_5
X <- read.csv("profsalary.txt", sep="\t")
mod1 <- lm(Salary ~ Experience + I(Experience^2), data=X)
summary(mod1)
# interpolate at 5 yrs of experience
e <- 5;
target_at_5 <- mod1$coefficients %*% c(1, e, e^2)
target_at_5
# or use predict
predict(mod1, data.frame(Experience=5))
X <- read.csv("profsalary.txt", sep="\t")
mod1 <- lm(Salary ~ Experience + I(Experience^2), data=X)
summary(mod1)
# interpolate at 5 yrs of experience
e <- 5;
target_at_5 <- mod1$coefficients %*% c(1, e, e^2)
target_at_5
# or use predict
predict(mod1, data.frame(Experience=5))
predict(lm(y~x1+x2, data.frame(x1=5,x2=3)))
X <- read.csv("profsalary.txt", sep="\t")
mod1 <- lm(Salary ~ Experience + I(Experience^2), data=X)
summary(mod1)
# interpolate at 5 yrs of experience
e <- 5;
target_at_5 <- mod1$coefficients %*% c(1, e, e^2)
# if Experience increases from 5 to 6, estiamted change in mean salary
salary_change <- mod1$coefficients %*% c(1, 6, 6^2) -
mod1$coefficients %*% c(1, 5, 5^2)
salary_change
# or use predict
predict(mod1, data.frame(Experience=5))
setwd("~/School/c_2017_2018/STA302/homework/hw2")
plot(cars)
a2 = read.table("DataA2.txt", sep=" ", header=T) # load the data
a2 = read.table("DataA2.txt", sep=" ", header=T) # load the data
a2 = read.table("DataA2.txt", sep=" ", header=T) # load the data
# fev forced expiratory volumn, measure of lung capacity, response variable
# age, height, continuous predictors
# sex, smoking status, categorical predictors (0 or 1)
# consider models that use age and fev
# 1. produce fev against age
fev <- a2$fev; age <- a2$age;
a2 = read.table("DataA2.txt", sep=" ", header=T) # load the data
# fev forced expiratory volumn, measure of lung capacity, response variable
# age, height, continuous predictors
# sex, smoking status, categorical predictors (0 or 1)
# consider models that use age and fev
fev <- a2$fev; age <- a2$age
#  Q1: plot FEV vs age and the scale-location plot
mod1 = lm(fev ~ age)
par(mfrow=c(1,2))
plot(age, fev, type="p", col="blue", pch=21, main="FEV vs age")
plot(mod1, which=3)  # which selects from among 4 lm plots
par(mfcol=c(2,3))
a2 = read.table("DataA2.txt", sep=" ", header=T) # load the data
# fev forced expiratory volumn, measure of lung capacity, response variable
# age, height, continuous predictors
# sex, smoking status, categorical predictors (0 or 1)
# consider models that use age and fev
fev <- a2$fev; age <- a2$age
#  Q1: plot FEV vs age and the scale-location plot
# a scale-location plot is sqrt of standardized residual vs fitted value
# see if residual spread along predictors, checks equal variance assumption
mod1 = lm(fev ~ age)
par(mfrow=c(1,2))
plot(age, fev, type="p", col="blue", pch=21, main="FEV vs age")
a2 = read.table("DataA2.txt", sep=" ", header=T) # load the data
# fev forced expiratory volumn, measure of lung capacity, response variable
# age, height, continuous predictors
# sex, smoking status, categorical predictors (0 or 1)
# consider models that use age and fev
fev <- a2$fev; age <- a2$age
#  Q1: plot FEV vs age and the scale-location plot
# a scale-location plot is sqrt of standardized residual vs fitted value
# see if residual spread along predictors, checks equal variance assumption
mod1 = lm(fev ~ age)
par(mfrow=c(1,2))
plot(age, fev, type="p", col="blue", pch=21, main="FEV vs age")
plot(mod1, which=3)  # which selects from among 4 lm plots
# Comment: The scatter plot indicates a linear association between FEV and age.
# The scale-location plot indicates that the variance in the response variable
# increases with age
# Q1.b plot sqrt, log, inverse transformation of data (both predictor and response)\
mod2 = lm(sqrt(fev)~sqrt(age))
mod3 = lm(log(fev)~log(age))
a=1/fev; b=1/age; mod4 = lm(a~b)
par(mfcol=c(2,3))
plot(sqrt(age),sqrt(fev),type="p",col="blue",pch=21, main="SQRT")
plot(mod2,which=3)
plot(log(age),log(fev),type="p",col="blue",pch=21, main="LOG")
plot(mod3,which=3)
plot(1/age,1/fev,type="p",col="blue",pch=21, main="RECIPROCAL")
plot(mod4,which=3)
# Q2.a
mod3 = lm(log(fev)~log(age))
# Q2.a
mod3 = lm(log(fev)~log(age))
# Q2(a) The estimated regression line is hat{log(fev)} = 0.8462 log(age) - 0.9877
mod3$coefficients
# Q1.b plot sqrt, log, inverse transformation of data (both predictor and response)\
mod2 = lm(sqrt(fev)~sqrt(age))
mod3 = lm(log(fev)~log(age))
a=1/fev; b=1/age; mod4 = lm(a~b)
par(mfcol=c(2,3))
plot(sqrt(age),sqrt(fev),type="p",col="blue",pch=21, main="SQRT")
plot(mod2,which=3)
plot(log(age),log(fev),type=
"p",col="blue",pch=21, main="LOG")
plot(mod3,which=3)
plot(1/age,1/fev,type="p",col="blue",pch=21, main="RECIPROCAL")
plot(mod4,which=3)
# Comment: log looks best as scale-location mostly evenly spread
# Q2.a The estimated regression line is hat{log(fev)} = 0.8462 log(age) - 0.9877
mod3 = lm(log(fev)~log(age))
mod3$coefficients
# Q2.b Has transformation improved adherence to constant variance assumption? is the model acceptable? Explain
# The residuals vs fitted line is greatly improved (From scale-location),
# but the variance still isn't constant: intermediate fitted values
# (around y-hat = 0.8) have relatively lowvariance.
# Separately, the QQ plot of the residuals (not shown) looks good.
# Q2.c Assume model acceptable, how do you interpret the slope?
# The slope indicates that for a k-fold increase in age, FEV increases by a
# factor of k^0.8462. So if age doubles, FEV increases by 80%.
# https://www.cscu.cornell.edu/news/statnews/stnews83.pdf
# rule of thumb
# response log transformed: 100*beta_1 percent change for a 1 unit increase in x
# predictor log transformed: beta_1/100 change for 1 percent increase in x
# both log transformed: beta_1 percent change for 1 percent increase in x
#    more precisely, k-fold increase in X -> k^beta_1 fold increase in Y
# Q2.d For age=c(8,17,21), find 95% CIs for mean response on untransformed scale
# Find 95% prediction intervals.
CI<-predict.lm(mod3,newdata=data.frame(age=c(8,17,21)), interval=c("confidence"))
PI<-predict.lm(mod3,newdata=data.frame(age=c(8,17,21)), interval=c("prediction"))
print(exp(CI)); print(exp(PI))
