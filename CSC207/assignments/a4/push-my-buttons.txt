My overall comment on PhotoRenamer.java is that its too long. Consider creating
custom panel classes for each panels and instantiating buttons in panels instead.
There are too many variables in the class, which indicates poor abstraction.

Too many buttons will give a sense of crowdedness and miss-guidance to the user.
Additionally, it may warrant excessive abstraction by implementing a separate
button class that perform a really simple action. The strength of using buttons
for every action is its straight-forwardness; everything is presented directly
and gives a subtle hint of an associated action. Alternatives to this approach
could be a menu that group a series of related actions. We could also consider
making instinctive click events, for example, double clicking the image will
opens up a Finder/Window Explorer thereby reducing the amount of buttons
required. I think overall declaring buttons in a separate file is a good
practice of abstraction. Although I would argue against it if the button is
of static nature (i.e. doesnt change much) and performs a simple task. It's also
extremely important to complement such by modularizing the different components.
Say we can create subfolders for each component and put buttons into
correspondingly different subfolders. Otherwise it would be difficult to
navigate all the different buttons under the same directory, in which both the
backend and UI resides.
