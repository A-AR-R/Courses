Script started on Sat Mar 25 01:33:20 2017
[1m[3m%[23m[1m[0m                                                                                                                                                                  [0m[23m[24m[J[44mwangpeiq@wolf[49m [1m[36m~/csc209/ex10[37m % [0m[39m[49m[K[?1h=ggdb randclient[1m [0m[0m [?1l>
GNU gdb (Ubuntu 7.7.1-0ubuntu5~14.04.2) 7.7.1
Copyright (C) 2014 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.  Type "show copying"
and "show warranty" for details.
This GDB was configured as "x86_64-linux-gnu".
Type "show configuration" for configuration details.
For bug reporting instructions, please see:
<http://www.gnu.org/software/gdb/bugs/>.
Find the GDB manual and other documentation resources online at:
<http://www.gnu.org/software/gdb/documentation/>.
For help, type "help".
Type "apropos word" to search for commands related to "word"...
Reading symbols from randclient...done.
(gdb) b main
Breakpoint 1 at 0x4007fd: file randclient.c, line 16.
(gdb) run 127.0.0.1
Starting program: /h/u13/c6/00/wangpeiq/csc209/ex10/randclient 127.0.0.1

Breakpoint 1, main (argc=2, argv=0x7fffffffe588) at randclient.c:16
16	int main(int argc, char** argv) {
(gdb) n
18	  char message[18] = "A stitch in time\r\n";
(gdb) n
25	  if ((soc = socket(AF_INET, SOCK_STREAM, 0)) == -1) {
(gdb) n
31	  peer.sin_family = AF_INET;                                // IPv4 network, address in ddd.ddd.ddd.ddd
(gdb) n
32	  peer.sin_port = htons(PORT);                              // access server port at PORT 
(gdb) n
33	  if (inet_pton(AF_INET, argv[1], &peer.sin_addr) < 1) {    // convert address to struct in_addr
(gdb) n
40	  if (connect(soc, (struct sockaddr *)&peer, sizeof(peer)) == -1) {
(gdb) n
41	    perror("randclient: connect");
(gdb) n
randclient: connect: Connection refused
42	    exit(1);
(gdb) n
[Inferior 1 (process 31331) exited with code 01]
(gdb) n
The program is not being run.
(gdb) r m   r 127.0.0.1
Starting program: /h/u13/c6/00/wangpeiq/csc209/ex10/randclient 127.0.0.1

Breakpoint 1, main (argc=2, argv=0x7fffffffe588) at randclient.c:16
16	int main(int argc, char** argv) {
(gdb) n
18	  char message[18] = "A stitch in time\r\n";
(gdb) n
25	  if ((soc = socket(AF_INET, SOCK_STREAM, 0)) == -1) {
(gdb) n
31	  peer.sin_family = AF_INET;                                // IPv4 network, address in ddd.ddd.ddd.ddd
(gdb) n
32	  peer.sin_port = htons(PORT);                              // access server port at PORT 
(gdb) n
33	  if (inet_pton(AF_INET, argv[1], &peer.sin_addr) < 1) {    // convert address to struct in_addr
(gdb) n
40	  if (connect(soc, (struct sockaddr *)&peer, sizeof(peer)) == -1) {
(gdb) n
46	  total_bytes = TIMES * sizeof(message);
(gdb) p pe  peer
$1 = {sin_family = 2, sin_port = 20941, sin_addr = {s_addr = 16777343}, sin_zero = "=\n@\000\000\000\000"}
(gdb) n
47	  current_byte = 0;
(gdb) n
48	  while (current_byte < total_bytes) {
(gdb) n
50	    howmany = rand() % (MAXCHARS - MINCHARS + 1) + MINCHARS;
(gdb) p howmany
$2 = 32767
(gdb) p *howmany
Cannot access memory at address 0x7fff
(gdb) p   printf()")")")     % "%d"  , howmay ny
32767(gdb) n
51	    bytes_left = total_bytes - current_byte;
(gdb) nprintf "%d", howmany
6(gdb) n
52	    if (howmany > bytes_left) {
(gdb) n
56	    for (int i = 0; i < howmany; i++) {
(gdb) n
57	      piece[i] = message[(current_byte + i) % sizeof(message)];
(gdb) p i
$3 = 0
(gdb) n
56	    for (int i = 0; i < howmany; i++) {
(gdb) p piece
$4 = "A\341\377\367\377\177"
(gdb) n
57	      piece[i] = message[(current_byte + i) % sizeof(message)];
(gdb) p   n
56	    for (int i = 0; i < howmany; i++) {
(gdb) p piece
$5 = "A \377\367\377\177"
(gdb) n
57	      piece[i] = message[(current_byte + i) % sizeof(message)];
(gdb) n
56	    for (int i = 0; i < howmany; i++) {
(gdb) n
57	      piece[i] = message[(current_byte + i) % sizeof(message)];
(gdb) n
56	    for (int i = 0; i < howmany; i++) {
(gdb) p piece
$6 = "A st\377\177"
(gdb) n
57	      piece[i] = message[(current_byte + i) % sizeof(message)];
(gdb) n
56	    for (int i = 0; i < howmany; i++) {
(gdb) n
57	      piece[i] = message[(current_byte + i) % sizeof(message)];
(gdb) n
56	    for (int i = 0; i < howmany; i++) {
(gdb) p i piece
$7 = "A stit"
(gdb) n
60	    write(soc, piece, howmany);
(gdb) jkjk[Kn
61	    current_byte += howmany;
(gdb) p cu urrent_byte
$8 = 0
(gdb) n
48	  while (current_byte < total_bytes) {
(gdb) n
50	    howmany = rand() % (MAXCHARS - MINCHARS + 1) + MINCHARS;
(gdb) n
51	    bytes_left = total_bytes - current_byte;
(gdb) n
52	    if (howmany > bytes_left) {
(gdb) n
56	    for (int i = 0; i < howmany; i++) {
(gdb) n
57	      piece[i] = message[(current_byte + i) % sizeof(message)];
(gdb) n
56	    for (int i = 0; i < howmany; i++) {
(gdb) n
57	      piece[i] = message[(current_byte + i) % sizeof(message)];
(gdb) n
56	    for (int i = 0; i < howmany; i++) {
(gdb) n
57	      piece[i] = message[(current_byte + i) % sizeof(message)];
(gdb) n
56	    for (int i = 0; i < howmany; i++) {
(gdb) n
57	      piece[i] = message[(current_byte + i) % sizeof(message)];
(gdb) n
56	    for (int i = 0; i < howmany; i++) {
(gdb) n
60	    write(soc, piece, howmany);
(gdb) n
61	    current_byte += howmany;
(gdb) n
48	  while (current_byte < total_bytes) {
(gdb) n
50	    howmany = rand() % (MAXCHARS - MINCHARS + 1) + MINCHARS;
(gdb) n
51	    bytes_left = total_bytes - current_byte;
(gdb) n
52	    if (howmany > bytes_left) {
(gdb) n
56	    for (int i = 0; i < howmany; i++) {
(gdb) l
51	    bytes_left = total_bytes - current_byte;
52	    if (howmany > bytes_left) {
53	      howmany = bytes_left;
54	    }
55	    // populate piece with next _howmany_ char from message 
56	    for (int i = 0; i < howmany; i++) {
57	      piece[i] = message[(current_byte + i) % sizeof(message)];
58	    }
59	    // write to socket created by socket() previously 
60	    write(soc, piece, howmany);
(gdb) until 59
main (argc=2, argv=0x7fffffffe588) at randclient.c:60
60	    write(soc, piece, howmany);
(gdb) n n
61	    current_byte += howmany;
(gdb) n
48	  while (current_byte < total_bytes) {
(gdb) n
50	    howmany = rand() % (MAXCHARS - MINCHARS + 1) + MINCHARS;
(gdb) n
51	    bytes_left = total_bytes - current_byte;
(gdb) until 59' 
main (argc=2, argv=0x7fffffffe588) at randclient.c:60
60	    write(soc, piece, howmany);
(gdb) p piece
$9 = "e\r\nimt"
(gdb) n
61	    current_byte += howmany;
(gdb) n
48	  while (current_byte < total_bytes) {
(gdb) n
50	    howmany = rand() % (MAXCHARS - MINCHARS + 1) + MINCHARS;
(gdb) n
51	    bytes_left = total_bytes - current_byte;
(gdb) n
52	    if (howmany > bytes_left) {
(gdb) n
56	    for (int i = 0; i < howmany; i++) {
(gdb) 
57	      piece[i] = message[(current_byte + i) % sizeof(message)];
(gdb) until 59
main (argc=2, argv=0x7fffffffe588) at randclient.c:60
60	    write(soc, piece, howmany);
(gdb) p pir ece
$10 = "A stit"
(gdb) n
61	    current_byte += howmany;
(gdb) n
48	  while (current_byte < total_bytes) {
(gdb) n
50	    howmany = rand() % (MAXCHARS - MINCHARS + 1) + MINCHARS;
(gdb) n
51	    bytes_left = total_bytes - current_byte;
(gdb) n
52	    if (howmany > bytes_left) {
(gdb) until 59
main (argc=2, argv=0x7fffffffe588) at randclient.c:60
60	    write(soc, piece, howmany);
(gdb) p piece
$11 = "ch tit"
(gdb) n
61	    current_byte += howmany;
(gdb) n
48	  while (current_byte < total_bytes) {
(gdb) n
50	    howmany = rand() % (MAXCHARS - MINCHARS + 1) + MINCHARS;
(gdb) n
51	    bytes_left = total_bytes - current_byte;
(gdb) until 59
main (argc=2, argv=0x7fffffffe588) at randclient.c:60
60	    write(soc, piece, howmany);
(gdb) p piece
$12 = "in tit"
(gdb) n
61	    current_byte += howmany;
(gdb) n
48	  while (current_byte < total_bytes) {
(gdb) n
50	    howmany = rand() % (MAXCHARS - MINCHARS + 1) + MINCHARS;
(gdb) n
51	    bytes_left = total_bytes - current_byte;
(gdb) n
52	    if (howmany > bytes_left) {
(gdb) n
56	    for (int i = 0; i < howmany; i++) {
(gdb) until 59
main (argc=2, argv=0x7fffffffe588) at randclient.c:60
60	    write(soc, piece, howmany);
(gdb) jk  p piece
$13 = "ime\r\nt"
(gdb) n
61	    current_byte += howmany;
(gdb) exit    q
A debugging session is active.

	Inferior 1 [process 31495] will be killed.

Quit anyway? (y or n) y
[1m[3m%[23m[1m[0m                                                                                                                                                                  [0m[23m[24m[J[44mwangpeiq@wolf[49m [1m[36m~/csc209/ex10[37m % [0m[39m[49m[K[?1h=eexit[?1l>

Script done on Sat Mar 25 01:49:55 2017
