Script started on Sat Mar 25 01:26:47 2017
[1m[3m%[23m[1m[0m                                                                                                                                                                  [0m[23m[24m[J[44mwangpeiq@wolf[49m [1m[36m~/csc209/ex10[37m % [0m[39m[49m[K[?1h=ggdb bufserver[1m [0m[0m [?1l>
GNU gdb (Ubuntu 7.7.1-0ubuntu5~14.04.2) 7.7.1
Copyright (C) 2014 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.  Type "show copying"
and "show warranty" for details.
This GDB was configured as "x86_64-linux-gnu".
Type "show configuration" for configuration details.
For bug reporting instructions, please see:
<http://www.gnu.org/software/gdb/bugs/>.
Find the GDB manual and other documentation resources online at:
<http://www.gnu.org/software/gdb/documentation/>.
For help, type "help".
Type "apropos word" to search for commands related to "word"...
Reading symbols from bufserver...done.
(gdb) r ma  break main
Breakpoint 1 at 0x400adc: file bufserver.c, line 70.
(gdb) r
Starting program: /h/u13/c6/00/wangpeiq/csc209/ex10/bufserver 

Breakpoint 1, main () at bufserver.c:70
70	int main() {
(gdb) l
65	    }
66	
67	  return -1; // return the location of '\r' if found
68	}
69	
70	int main() {
71	  int listenfd;
72	  int fd, nbytes;
73	  char buf[30];
74	  int inbuf; // how many bytes currently in buffer?
(gdb) n
82	  listenfd = setup();
(gdb) l s
setup () at bufserver.c:11
11	int setup(void) {
(gdb) n
12	  int on = 1, status;
(gdb) l n
15	  if ((listenfd = socket(AF_INET, SOCK_STREAM, 0)) == -1) {
(gdb) n
22	  status = setsockopt(listenfd, SOL_SOCKET, SO_REUSEADDR,
(gdb) p listenfd
$1 = 3
(gdb) n
24	  if(status == -1) {
(gdb) n
28	  self.sin_family = AF_INET;
(gdb) p AF_INET
No symbol "AF_INET" in current context.
(gdb) p self.sin_family
$2 = 0
(gdb) n
29	  self.sin_addr.s_addr = INADDR_ANY;
(gdb) p self.sin_addr.s_addr
$3 = 0
(gdb) n
30	  self.sin_port = htons(PORT);
(gdb) n
31	  memset(&self.sin_zero, 0, sizeof(self.sin_zero));  // Initialize sin_zero to 0
(gdb) p self.sin_port
$4 = 20941
(gdb) n
33	  printf("Listening on %d\n", PORT);
(gdb) n
Listening on 52561
35	  if (bind(listenfd, (struct sockaddr *)&self, sizeof(self)) == -1) {
(gdb) n
40	  if (listen(listenfd, 5) == -1) {
(gdb) n
44	  return listenfd;
(gdb) n
45	}
(gdb) n
main () at bufserver.c:84
84	    socklen = sizeof(peer);
(gdb) n
88	    if ((fd = accept(listenfd, (struct sockaddr *)&peer, &socklen)) < 0) {
(gdb) p socklen
$5 = 16
(gdb) n
92	      printf("New connection on port %d\n", ntohs(peer.sin_port));
(gdb) p fd
$6 = 4
(gdb) n
New connection on port 44428
95	      inbuf = 0;          // buffer is empty; has no bytes
(gdb) n
96	      room = sizeof(buf); // room == capacity of the whole buffer
(gdb) n
97	      after = buf;        // start writing at beginning of buf
(gdb) n
99	      while ((nbytes = read(fd, after, room)) > 0) {
(gdb) n
101	        inbuf += nbytes;
(gdb) n
104	        where = find_network_newline(buf, inbuf);
(gdb) n
106	        printf("inbuf = [%d], room = [%d]\n", inbuf, room);
(gdb) n
inbuf = [30], room = [30]
107	        if (where >= 0) { // OK. we have a full line
(gdb) n
115	          *(buf + where) = '\0';
(gdb) n
117	          printf("Next message: %s\n", buf);
(gdb) n
Next message: A stitch in time
124	          inbuf = inbuf - where - 2;
(gdb) n
125	          memset(&buf, '\0', where + 2);        // clear buf before and inlcuding \r\n
(gdb) n
130	          memmove(buf, buf + where + 2, 30 - where - 2);
(gdb) p buf
$7 = '\000' <repeats 18 times>, "A stitch in "
(gdb) n
134	        room = 30 - inbuf;
(gdb) p buf
$8 = "A stitch in \000\000\000\000\000\000A stitch in "
(gdb) n
135	        after = buf + inbuf; 
(gdb) n
137	        printf("inbuf = [%d], room = [%d]\n", inbuf, room);
(gdb) n
inbuf = [12], room = [18]
99	      while ((nbytes = read(fd, after, room)) > 0) {
(gdb) n
101	        inbuf += nbytes;
(gdb) n
104	        where = find_network_newline(buf, inbuf);
(gdb) p where
$9 = 16
(gdb) n
106	        printf("inbuf = [%d], room = [%d]\n", inbuf, room);
(gdb) n
inbuf = [30], room = [18]
107	        if (where >= 0) { // OK. we have a full line
(gdb) n
115	          *(buf + where) = '\0';
(gdb) n
117	          printf("Next message: %s\n", buf);
(gdb) n
Next message: A stitch in time
124	          inbuf = inbuf - where - 2;
(gdb) n
125	          memset(&buf, '\0', where + 2);        // clear buf before and inlcuding \r\n
(gdb) p   n
130	          memmove(buf, buf + where + 2, 30 - where - 2);
(gdb) p buf
$10 = '\000' <repeats 18 times>, "A stitch in "
(gdb) n
134	        room = 30 - inbuf;
(gdb) p buf
$11 = "A stitch in \000\000\000\000\000\000A stitch in "
(gdb) n
135	        after = buf + inbuf; 
(gdb) n
137	        printf("inbuf = [%d], room = [%d]\n", inbuf, room);
(gdb) n
inbuf = [12], room = [18]
99	      while ((nbytes = read(fd, after, room)) > 0) {
(gdb) n
101	        inbuf += nbytes;
(gdb) n
104	        where = find_network_newline(buf, inbuf);
(gdb) 
106	        printf("inbuf = [%d], room = [%d]\n", inbuf, room);
(gdb) n
inbuf = [30], room = [18]
107	        if (where >= 0) { // OK. we have a full line
(gdb) n
115	          *(buf + where) = '\0';
(gdb) n
117	          printf("Next message: %s\n", buf);
(gdb) n
Next message: A stitch in time
124	          inbuf = inbuf - where - 2;
(gdb) n
125	          memset(&buf, '\0', where + 2);        // clear buf before and inlcuding \r\n
(gdb) n
130	          memmove(buf, buf + where + 2, 30 - where - 2);
(gdb) n
134	        room = 30 - inbuf;
(gdb) n
135	        after = buf + inbuf; 
(gdb) n
137	        printf("inbuf = [%d], room = [%d]\n", inbuf, room);
(gdb) n
inbuf = [12], room = [18]
99	      while ((nbytes = read(fd, after, room)) > 0) {
(gdb) n
101	        inbuf += nbytes;
(gdb) n
104	        where = find_network_newline(buf, inbuf);
(gdb) n
106	        printf("inbuf = [%d], room = [%d]\n", inbuf, room);
(gdb) n
inbuf = [30], room = [18]
107	        if (where >= 0) { // OK. we have a full line
(gdb) n
115	          *(buf + where) = '\0';
(gdb) n
117	          printf("Next message: %s\n", buf);
(gdb) n
Next message: A stitch in time
124	          inbuf = inbuf - where - 2;
(gdb) n
125	          memset(&buf, '\0', where + 2);        // clear buf before and inlcuding \r\n
(gdb) n
130	          memmove(buf, buf + where + 2, 30 - where - 2);
(gdb) n
134	        room = 30 - inbuf;
(gdb) n
135	        after = buf + inbuf; 
(gdb) n
137	        printf("inbuf = [%d], room = [%d]\n", inbuf, room);
(gdb) n
inbuf = [12], room = [18]
99	      while ((nbytes = read(fd, after, room)) > 0) {
(gdb) n
101	        inbuf += nbytes;
(gdb) n
104	        where = find_network_newline(buf, inbuf);
(gdb) n
106	        printf("inbuf = [%d], room = [%d]\n", inbuf, room);
(gdb) n
inbuf = [18], room = [18]
107	        if (where >= 0) { // OK. we have a full line
(gdb) n
115	          *(buf + where) = '\0';
(gdb) n
117	          printf("Next message: %s\n", buf);
(gdb) n
Next message: A stitch in time
124	          inbuf = inbuf - where - 2;
(gdb) n
125	          memset(&buf, '\0', where + 2);        // clear buf before and inlcuding \r\n
(gdb) n
130	          memmove(buf, buf + where + 2, 30 - where - 2);
(gdb) n
134	        room = 30 - inbuf;
(gdb) n
135	        after = buf + inbuf; 
(gdb) n
137	        printf("inbuf = [%d], room = [%d]\n", inbuf, room);
(gdb) n
inbuf = [0], room = [30]
99	      while ((nbytes = read(fd, after, room)) > 0) {
(gdb) n
141	      close(fd);
(gdb) n
143	  }
(gdb) n
84	    socklen = sizeof(peer);
(gdb) n
88	    if ((fd = accept(listenfd, (struct sockaddr *)&peer, &socklen)) < 0) {
(gdb) n
n
n
n
n
n
q
^C
Program received signal SIGINT, Interrupt.
0x00007ffff7b10940 in __accept_nocancel () at ../sysdeps/unix/syscall-template.S:81
81	../sysdeps/unix/syscall-template.S: No such file or directory.
(gdb) q
A debugging session is active.

	Inferior 1 [process 29532] will be killed.

Quit anyway? (y or n) y
[1m[3m%[23m[1m[0m                                                                                                                                                                  [0m[23m[24m[J[44mwangpeiq@wolf[49m [1m[36m~/csc209/ex10[37m % [0m[39m[49m[K[?1h=eexit[?1l>

Script done on Sat Mar 25 01:32:23 2017
